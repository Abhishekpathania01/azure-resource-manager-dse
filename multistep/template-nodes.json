{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Region deploying into"
      }
    },
    "opsCenterIP": {
      "type": "string",
      "metadata": {
        "description": "IP of OpsCenter instance, public or private"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of cluster to deploy nodes into"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for admin user"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for admin user"
      }
    },
    "nodeCount": {
      "type": "int",
      "metadata": {
        "description": "Number of nodes to deploy"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "Size of virtual machine to provision for the cluster"
      }
    },
    "diskSize": {
      "type": "int",
      "defaultValue": 1023,
      "metadata": {
        "description": "Size (GB) of extenal data volume for each node"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network to deploy into"
      }
    },
    "vnetRG": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group of vnet if different"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet to deploy into"
      }
    },
    "namespace": {
      "type": "string",
      "metadata": {
        "description": "Name of datacenter and VM name prefix"
      }
    }
  },
  "variables": {
    "baseUrl": "https://raw.githubusercontent.com/DSPN/azure-resource-manager-dse/rhel",
    "templateUrl": "[concat(variables('baseUrl'), '/multistep/')]",
    "extensionUrl": "[concat(variables('baseUrl'), '/multistep/')]",
    "vmName": "[concat(parameters('namespace'), 'vm')]",
    "vnetId": "[resourceId(parameters('vnetRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetName')  )]",
    "subnetId": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "faultDomainCountMap": {
      "australiaeast": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "australiasoutheast": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "brazilsouth": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "canadacentral": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "canadaeast": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "centralindia": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "centralus": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "centraluseuap": {
          "MaximumPlatformFaultDomainCount": 1
      },
      "eastasia": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "eastus": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "eastus2": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "eastus2euap": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "japaneast": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "japanwest": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "koreacentral": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "koreasouth": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "northcentralus": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "northeurope": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "southcentralus": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "southeastasia": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "southindia": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "uksouth": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "ukwest": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "usdodcentral": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "usdodeast": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "usgovarizona": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "usgovtexas": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "usgovvirginia": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "westcentralus": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "westeurope": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "westindia": {
          "MaximumPlatformFaultDomainCount": 2
      },
      "westus": {
          "MaximumPlatformFaultDomainCount": 3
      },
      "westus2": {
          "MaximumPlatformFaultDomainCount": 2
      }
    },
    "uniqueString": "[uniqueString(resourceGroup().id, deployment().name)]",
    "osSettings": {
      "imageReference": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "7.2",
        "version": "latest"
      },
      "scripts": [
        "[concat(variables('extensionUrl'), 'node.sh')]",
        "[concat(variables('extensionUrl'), 'opsCenter.sh')]"
      ]
    }
  },
  "resources": [
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('namespace')]",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount":"[variables('faultdomainCountMap')[tolower(replace(parameters('location'),' ',''))].MaximumPlatformFaultDomainCount]",
        "platformUpdateDomainCount": 18
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-08-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('namespace'), 'vm', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'), 'ipLoop')]",
        "count": "[parameters('nodeCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('namespace'), 'vm', copyIndex(), variables('uniqueString'))]"
        }
      }
    },
    {
      "apiVersion": "2017-08-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('namespace'), 'vm', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'), 'nicLoop')]",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('namespace'), 'vm', copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('namespace'), 'vm', copyindex()))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('namespace'), 'vm', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'), 'vmLoop')]",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('namespace'), 'vm', copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('namespace'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('namespace')))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('namespace'), 'vm', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('osSettings').imageReference]",
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "[parameters('diskSize')]",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namespace'), 'vm', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('namespace'), 'vm', copyindex(), '/installdsenode')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'), 'vmLoop')]",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('namespace'), 'vm', copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('osSettings').scripts]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash node.sh ', parameters('nodeCount'), ' ', parameters('opsCenterIP'), ' ', parameters('namespace'), ' ', resourceGroup().location, ' ', parameters('clusterName'))]"
        }
      }
    }
  ],
  "outputs": {}
}
